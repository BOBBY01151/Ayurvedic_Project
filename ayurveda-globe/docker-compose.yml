version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: ayurveda-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ayurveda-globe
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ayurveda-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: infra/Dockerfile.backend
    container_name: ayurveda-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGO_URI: mongodb://admin:password@mongo:27017/ayurveda-globe?authSource=admin
      JWT_SECRET: your-production-jwt-secret-change-this
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      CORS_ORIGIN: http://localhost:80
    ports:
      - "4000:4000"
    depends_on:
      - mongo
    networks:
      - ayurveda-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: infra/Dockerfile.frontend
    container_name: ayurveda-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:80/api/v1
      VITE_STRIPE_PUBLISHABLE_KEY: pk_test_your_stripe_publishable_key
    depends_on:
      - backend
    networks:
      - ayurveda-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: ayurveda-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - ayurveda-network

volumes:
  mongo_data:
    driver: local
  frontend_build:
    driver: local

networks:
  ayurveda-network:
    driver: bridge
